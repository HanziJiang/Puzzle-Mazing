package com.group0536.puzzlemazing.dispatcher;

import com.group0536.puzzlemazing.actions.Action;
import com.group0536.puzzlemazing.stores.StoreChangeEvent;

/**
 * This class represents a dispatcher that dispatch actions generated by view
 * and emit change events for stores.
 *
 * This class belongs to our Flux framework. You should not modify this file
 * when adding new features.
 *
 * @author Jimmy
 * @version 1.2.0
 * @since 1.0
 */
public class Dispatcher {
    private static Dispatcher dispatcher;
    private final FluxBus bus;

    private Dispatcher(FluxBus bus) {
        this.bus = bus;
    }

    /**
     * Get dispatcher for the app
     * @param bus event bus object from com.squareup.otto
     * @return current dispatcher for this app
     */
    public static Dispatcher getDispatcher(FluxBus bus) {
        if (dispatcher == null) {
            dispatcher = new Dispatcher(bus);
        }
        return dispatcher;
    }

    /**
     * Dispatch an action
     * @param action action object resulted from Action.ActionBuilder
     */
    public void dispatch(Action action) {
        bus.post(action);
    }

    /**
     * Dispatch a store change
     * @param e store change event to be dispatched
     */
    public void dispatch(StoreChangeEvent e) {
        bus.post(e);
    }

    /**
     * Register classInstance to receive events
     * @param classInstance class instance to register
     */
    public void register(final Object classInstance) {
        bus.register(classInstance);
    }

    /**
     * Unregister classInstance so that it will no longer receive events
     * @param classInstance class instance to unregister
     */
    public void unregister(final Object classInstance) {
        bus.unregister(classInstance);
    }
}
